#!/usr/bin/env bash

# Exit immediately if a command exits with a non-zero status.
set -e

# Decide which docker-compose file to use
COMPOSE_FILE="dev"

# Disable pseudo-TTY allocation
TTY=""

if [ ! -z "$BUILD_NUMBER" ]; then
    COMPOSE_FILE="ci"
    TTY="-T"
fi

COMPOSE="docker-compose -f docker-compose.base.yml -f docker-compose.$COMPOSE_FILE.yml"

export DOCKER_BASENAME=$(basename "$(pwd)" | sed 's/\.//g')

if [ $# -gt 0 ]; then
    # install development env
    if [ "$1" == "install" ]; then
        shift 1

        if [ ! -f ".docker-sync/daemon.pid" ]; then
            docker-sync start
        fi

        ./develop npm install

    elif [ "$1" == "start" ]; then
        shift 1
		if [ ! -f ".docker-sync/daemon.pid" ]; then
			docker-sync start
		fi
        ./develop up -d

    elif [ "$1" == "stop" ]; then
        shift 1
        ./develop down
        docker-sync stop

    elif [ "$1" == "clean" ]; then
        shift 1
        docker-sync clean

    elif [ "$1" == "npm" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            app \
            npm "$@"

    elif [ "$1" == "npx" ]; then
        shift 1
        $COMPOSE run --rm $TTY \
            -w /var/www/html \
            app \
            npx "$@"

    else
        $COMPOSE "$@"
    fi
else
    $COMPOSE ps
fi
